{"version":3,"sources":["Components/Header.js","List/ListItem.js","List/List.js","Components/All.js","Graph/Graph.js","serviceWorker.js","index.js","App.js"],"names":["Header","React","useState","isReturningUser","localStorage","savedMode","JSON","parse","getItem","userPrefersDark","window","matchMedia","matches","getPrefColorScheme","getInitialMode","darkMode","setDarkMode","useEffect","setItem","stringify","className","class","data-href","data-layout","data-size","target","href","onClick","prevMode","ListItem","src","this","props","flag","country","cases","todayCases","deaths","todayDeaths","recovered","critical","Component","List","onSort","column","e","direction","state","sort","sortedData","data","a","b","nameA","toUpperCase","nameB","confirmed","contractValue","reverse","setState","giveDate","start","end","date","Date","Math","random","updated","toString","expandList","expanded","loading","fetchData","setInterval","axios","get","then","res","onSortDeathsChange","format","tz","map","item","index","key","id","countryInfo","All","fetchAll","replace","dateFormat","require","tooltip","background","padding","borderRadius","color","fontSize","display","flexFlow","CustomTooltip","active","payload","label","labelFormated","style","value","toPercent","decimal","fixed","toFixed","countries","Graph","casesDates","selectedCountry","change","event","getGraph","names","values","result","i","length","url","casesKeys","Object","keys","timeline","deathsValues","entries","Primerov","hasOwnProperty","obj","assign","smrti","allCases","slice","onChange","textAlign","name","prevod","width","height","margin","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","dataKey","tickFormatter","tick","content","type","isAnimationActive","animationDuration","fill","fillOpacity","Boolean","location","hostname","match","ReactDOM","render","console","log","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bde8bd64.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\n\nfunction Header() {\n\t\n\tconst [darkMode, setDarkMode] = React.useState(getInitialMode());\n\n\n\tReact.useEffect(() => {\n\t\tlocalStorage.setItem('dark', JSON.stringify(darkMode));\n\t}, [darkMode]);\n\n\tfunction getInitialMode() {\n\t\tconst isReturningUser = \"dark\" in localStorage;\n\t\tconst savedMode = JSON.parse(localStorage.getItem('dark'));\n\t\tconst userPrefersDark = getPrefColorScheme();\n\t\t// if mode was saved -> dark / light\n\t\tif (isReturningUser) {\n\t\t\treturn savedMode;\n\t\t} else if (userPrefersDark) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\t// if preferred color scheme dark -> dark\n\t\t// otherwise -> light\n\n\t\tconsole.log(savedMode || false);\n\t}\n\n\tfunction getPrefColorScheme() {\n\t\tif (!window.matchMedia) return;\n\n\t\treturn window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n\t}\n\n\t\treturn(\n\t\t\t<>\n\t\t\t\t<header className=\"main__header\">\n\t\t\t\t\t<div className=\"logo\">\n\t\t\t\t\t\t<h1>Koronavirus</h1>\n\t\t\t\t\t\t<h2>Podrobni podatki o posledicah virusa</h2>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"share_div\">\n\t\t\t\t\t\t<div class=\"fb-share-button\" data-href=\"https://corona.vidakovic.si/\" data-layout=\"button\" data-size=\"large\"><a target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fcorona.vidakovic.si%2F&amp;src=sdkpreparse\" class=\"fb-xfbml-parse-ignore\">Share</a></div>\n\t\t\t\t\t\t<a class=\"twitter-share-button\"\n\t\t\t\t\t\t\thref=\"https://twitter.com/intent/tweet?text=Podrobni podatki o koronavirusu\"\n\t\t\t\t\t\t\tdata-size=\"large\">\n\t\t\t\t\t\t\tTweet\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mode\">\n\t\t\t\t\t\t<div className=\"mode__button\" onClick={() => setDarkMode(prevMode => !prevMode)}>\n\t\t\t\t\t\t\t<i className={darkMode ? \"fa fa-sun\" : \"fa fa-moon\"}></i>\n\t\t\t\t\t\t\t<span>{darkMode ? \"Svetli\" : \"Temni\"} način</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t</>\n\t\t)\n}\n\nexport default Header;","import React from 'react';\n\nexport default class ListItem extends React.Component {\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"listItem\">\n\t\t\t\t<div className=\"listItem__cell item__state\">\n\t\t\t\t\t<img className=\"item__state--flag\" src={this.props.flag} />\n\t\t\t\t\t<span><b>{this.props.country}</b></span> \n\t\t\t\t</div>\n\t\t\t\t<div className=\"listItem__cell item__confirmed\">\n\t\t\t\t\t<span>{this.props.cases}</span>\n\t\t\t\t\t<span className={ this.props.todayCases > 0 ? 'new_cases positive' : 'new_cases negative' }>{ this.props.todayCases > 0 ? '+' + this.props.todayCases : '' }</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"listItem__cell item__deaths\">\n\t\t\t\t\t<span>{this.props.deaths}</span>\n\t\t\t\t\t<span className={ this.props.todayDeaths > 0 ? 'new_cases positive' : 'new_cases negative' }>{ this.props.todayDeaths > 0 ? '+' + this.props.todayDeaths : '' }</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"listItem__cell item__recovered\">{this.props.recovered}</div>\n\t\t\t\t<div className=\"listItem__cell item__critical\">{this.props.critical}</div>\n\t\t\t</div>\n\t\t)\n\t}\n}","import React from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nimport ListItem from './ListItem.js';\n\nexport default class List extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\tdata: [],\n\t\t\texpanded: false,\n\t\t\tupdated: new Date(),\n\t\t\tsort: {\n\t\t\t\tcolumn: null,\n\t\t\t\tdirection: 'desc',\n\t\t\t},\n\t\t};\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.fetchData();\n\n\t\tsetInterval(() => {\n\t\t\tthis.onSort(this.state.sort.column)\n\t\t\tthis.fetchData();\n\t\t}, 10000);\t\t\n\n\t};\n\n\tfetchData() {\n\n\n\t\taxios.get(\"https://corona.lmao.ninja/countries\")\n\t\t\t.then(res => {\n\t\t\t\tconst data = res.data;\n\t\t\t\tthis.setState({data});\n\t\t\t\tthis.setState({loading: false});\n\t\t\t\tthis.setState({updated: new Date()});\n\t\t\t\t// this.giveDate(new Date( Date.now() - 1000 * 60 ), new Date( Date.now() - 4500 * 60))\n\t\t})\n\t}\n\n\tonSort = (column) => (e) => {\n\t  const direction = this.state.sort.column ? (this.state.sort.direction === 'asc' ? 'desc' : 'asc') : 'desc';\n\t  const sortedData = this.state.data.sort((a, b) => {\n\t    if (column === 'country') {\n\t\t\tconst nameA = a.country.toUpperCase();\n\t\t\tconst nameB = b.country.toUpperCase();\n\n\t\t\tif (nameA < nameB) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (nameA > nameB) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t    } else if (column === 'confirmed') {\n\t\t\tconst nameA = a.confirmed;\n\t\t\tconst nameB = b.confirmed;\n\n\t\t\tif (nameA < nameB) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (nameA > nameB) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t    } else if (column === 'deaths') {\n\t\t\tconst nameA = a.deaths;\n\t\t\tconst nameB = b.deaths;\n\n\t\t\tif (nameA < nameB) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (nameA > nameB) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t    } else if (column === 'recovered') {\n\t\t\tconst nameA = a.recovered;\n\t\t\tconst nameB = b.recovered;\n\n\t\t\tif (nameA < nameB) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (nameA > nameB) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t    } else if (column === 'critical') {\n\t\t\tconst nameA = a.critical;\n\t\t\tconst nameB = b.critical;\n\n\t\t\tif (nameA < nameB) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (nameA > nameB) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t    } else {\n\t    \treturn a.contractValue - b.contractValue;\n\t    }\n\n\t  });\n\n\t  if (direction === 'desc') {\n\t    sortedData.reverse();\n\t  }\n\n\t  this.setState({\n\t    data: sortedData,\n\t    sort: {\n\t      column,\n\t      direction,\n\t    }\n\t  });\n\t};\n\n\tgiveDate = (start, end) => {\n\t\tvar date = new Date(+start + Math.random() * (end - start));\n\t\tthis.setState({updated: date.toString()});\n\t}\n\n\texpandList = () => {\n\t\tthis.setState({expanded: !this.state.expanded});\n\t}\n\n\trender() {\n\n\t\tif (this.state.loading) {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<header className=\"section__header\">\n\t\t\t\t\t\t<h3>Podatki po državah</h3>\n\t\t\t\t\t\t<div className=\"date\">\n\t\t\t\t\t\t\t<i className=\"fa fa-refresh\" onClick={() => this.fetchData}></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\t\t\t\t\t<div className=\"list\">\n\t\t\t\t\t\t<div className=\"list__head\">\n\t\t\t\t\t\t\t<div className=\"list__head--state\"><span>Država</span></div>\n\t\t\t\t\t\t\t<div className=\"list__head--confirmed\"><span>Potrjenih</span></div>\n\t\t\t\t\t\t\t<div className=\"list__head--deaths\" onClick={this.onSortDeathsChange}>\n\t\t\t\t\t\t\t\t<span>Smrti</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"list__head--recovered\"><span>Okrevanih</span></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t\t\t<div className=\"loader\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<header className=\"section__header\">\n\t\t\t\t\t\t<h3>Podatki po državah</h3>\n\t\t\t\t\t\t<div className=\"date\">\n\t\t\t\t\t\t\t<i className=\"fa fa-refresh\" onClick={() => this.fetchData()}></i>\n\t\t\t\t\t\t\t<p className=\"data__updated\"><Moment format=\"DD.MM.YYYY HH:mm\" tz=\"Europe/Ljubljana\">{this.state.updated}</Moment></p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\n\t\t\t\t\t<div className={this.state.expanded ? 'list expanded' : 'list'}>\n\t\t\t\t\t\t<div className=\"see-more\" onClick={() => this.expandList()}>\n\t\t\t\t\t\t\t<span><i className=\"fa fa-plus\"></i> Prikaži vse</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"list__head\">\n\t\t\t\t\t\t\t<div className=\"list__head--state\" onClick={this.onSort('country')}>\n\t\t\t\t\t\t\t\t<span>Država</span>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-sort\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"list__head--confirmed\" onClick={this.onSort('confirmed')}>\n\t\t\t\t\t\t\t\t<span>Potrjenih</span>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-sort\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"list__head--deaths\" onClick={this.onSort('deaths')}>\n\t\t\t\t\t\t\t\t<span>Smrti</span>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-sort\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"list__head--recovered\" onClick={this.onSort('recovered')}>\n\t\t\t\t\t\t\t\t<span>Okrevanih</span>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-sort\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"list__head--critical\" onClick={this.onSort('critical')}>\n\t\t\t\t\t\t\t\t<span>Kritični</span>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-sort\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"items\">\n\t\t\t\t\t\t\t{this.state.data.map((item, index) => \n\t\t\t\t\t\t\t\t<ListItem key={index}  id={item.id} country={item.country} flag={item.countryInfo.flag} cases={item.cases} todayCases={item.todayCases} deaths={item.deaths} todayDeaths={item.todayDeaths} recovered={item.recovered} critical={item.critical} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n}","import React from 'react';\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\n\nclass All extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tdata: {\n\t\t\t\tcases: 0,\n\t\t\t\tdeaths: 0,\n\t\t\t\trecovered: 0,\n\t\t\t\tupdated: 0\n\t\t\t},\n\t\t};\n\t}\n\n\tcomponentWillMount() {\n\t\tthis.fetchAll();\n\n\t\tsetInterval(() => {\n\t\t\tthis.fetchAll();\n\t\t}, 30000);\t\t\n\t}\n\n\tfetchAll() {\n\t\taxios.get(\"https://corona.lmao.ninja/all\")\n\t\t\t.then(res => {\n\t\t\t\tconst data = res.data;\n\t\t\t\tthis.setState({data});\n\t\t})\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"all-data\">\n\t\t\t\t<div className=\"all-data__header\">\n\t\t\t\t\t<h2>Število vseh primerov po svetu</h2>\n\t\t\t\t\t<p><span>Posodobljeno: </span><Moment format=\"DD.MM.YYYY HH:mm\" tz=\"Europe/Ljubljana\">{this.state.updated}</Moment></p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"data-points\">\n\t\t\t\t\t<div className=\"data-point\">\n\t\t\t\t\t\t<h3>{this.state.data.cases.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</h3>\n\t\t\t\t\t\t<span>Primerov</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"data-point\">\n\t\t\t\t\t\t<h3>{this.state.data.deaths.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</h3>\n\t\t\t\t\t\t<span>Smrti</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"data-point\">\n\t\t\t\t\t\t<h3>{this.state.data.recovered.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}</h3>\n\t\t\t\t\t\t<span>Okrevanih</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n\n}\n\nexport default All;\n","import React from 'react';\nimport axios from 'axios';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\nvar dateFormat = require('dateformat');\nconst tooltip = {\n\tbackground: '#fff',\n\tpadding: '0.5rem 1rem',\n\tborderRadius: '3px',\n\tcolor: 'black',\n\tfontSize: '0.9rem',\n\tdisplay: 'flex',\n\tflexFlow: 'column'\n};\n\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  \tlet labelFormated = dateFormat(label, \"dd.mm.yyyy\")\n  if (active && payload) {\n    return (\n      <div style={tooltip}>\n        <span className=\"label\">{`${labelFormated}:`} <b>{`${payload[1].value}`} potrjenih primerov</b></span>\n        <span className=\"label\">{`${labelFormated}:`} <b>{`${payload[0].value}`} smrti</b></span>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst getPercent = (value, total) => {\n\tconst ratio = total > 0 ? value / total : 0;\n  \n  return toPercent(ratio, 2);\n};\n\nconst toPercent = (decimal, fixed = 0) => {\n\treturn `${(decimal * 100).toFixed(fixed)}%`;\n};\n\nconst countries = require('./countries.json');\n\n\nexport default class Graph extends React.Component {\n\tstate = {\n\t\tloading: true,\n\t\tdata: [],\n\t\tcases: {},\n\t\tcasesDates: {},\n\t\tselectedCountry: \"slovenia\"\n\n\t}\n\n\n\ttoObject(names, values) {\n\t\tvar result = {};\n\t\tfor (var i = 0; i < names.length; i++)\n\t\t\tresult[names[i]] = values[i];\n\t\treturn result;\n\t}\n\n\tgetGraph(country) {\n\t\tlet url = \"https://corona.lmao.ninja/v2/historical/\" + country;\n\t\taxios.get(url)\n\t\t.then(res => {\n\t\t\tconst getData = res.data;\n\t\t\tconst casesKeys = Object.keys(res.data.timeline.cases);\n\t\t\tconst deathsValues = Object.values(res.data.timeline.deaths);\n\t\t\tvar cases = Object.entries(res.data.timeline.cases).map(([date, Primerov]) => ({date,Primerov}));\n\n\t\t\tfor (var key in cases) {\n\t\t\t    // skip loop if the property is from prototype\n\t\t\t    if (!cases.hasOwnProperty(key)) continue;\n\n\t\t\t    var obj = cases[key];\n\t\t\t    Object.assign(obj, {smrti: deathsValues[key]})\n\n\t\t\t}\n\n\t\t\tvar allCases = cases.slice(40)\n\n\t    \t\n\t\t\tthis.setState({data: res.data});\n\t\t\tthis.setState({cases: allCases});\n\t\t\tthis.setState({casesDates: casesKeys});\n\t\t\tthis.setState({loading: false});\n\t\t});\n\t}\n\n     change = (event) => {\n\t\tthis.setState({selectedCountry: event.target.value});\n\t\tthis.getGraph(event.target.value)\n     }\n\n\n\tcomponentWillMount() {\n\t\tthis.getGraph(\"slovenia\")\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<>\n\t\t\t\t<header className=\"section__header\">\n\t\t\t\t\t<div class=\"header__select\">\n\t\t\t\t\t\t<h2>Graf primerov v</h2>\n\t\t\t\t\t\t<div className=\"select_country\">\n\t\t\t\t\t\t\t<select className=\"select_country--select\" onChange={this.change} value={this.state.selectedCountry}>\n\t\t\t\t\t\t\t\t<optgroup>\n\t\t\t\t\t\t\t\t\t<option value=\"slovenia\">Slovenija</option>\n\t\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t\t\t<optgroup label=\"_______________________________\" style={{textAlign: 'center'}}>\n\t\t\t\t\t\t\t\t\t{Object.keys(countries).map(function(i) {\n\t\t\t\t\t\t\t\t\t\tvar country = countries[i];\n\t\t\t\t\t\t\t\t\t\t\treturn (<option value={country.name}>{country.prevod}</option>)\n\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</optgroup>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<div className=\"select_country--icon\">\n\t\t\t\t\t\t\t\t<i className=\"fa fa-chevron-down\"></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<div style={{width: '100%', height: 210}}>\n\t\t\t\t\t<ResponsiveContainer>\n\t\t\t\t\t\t<AreaChart\n\t\t\t\t\t\t\theight={100}\n\t\t\t\t\t\t\tdata={this.state.cases}\n\t\t\t\t\t\t\tmargin={{\n\t\t\t\t\t\t\ttop: 0, right: 25, left: -15, bottom: 0,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t  <defs>\n\t\t\t\t\t\t    <linearGradient id=\"colorSmrti\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n\t\t\t\t\t\t      <stop offset=\"0%\" stopColor=\"red\" stopOpacity={0.3}/>\n\t\t\t\t\t\t      <stop offset=\"100%\" stopColor=\"red\" stopOpacity={0}/>\n\t\t\t\t\t\t    </linearGradient>\n\t\t\t\t\t\t    <linearGradient id=\"colorPrimerov\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n\t\t\t\t\t\t      <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0.3)\" stopOpacity={1}/>\n\t\t\t\t\t\t      <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 1)\" stopOpacity={0}/>\n\t\t\t\t\t\t    </linearGradient>\n\t\t\t\t\t\t  </defs>\n\t\t\t\t\t\t\t<CartesianGrid stroke='rgba(255, 255, 255, 0.2)'/>\n\t\t\t\t\t\t\t<XAxis dataKey=\"date\" stroke='rgba(255, 255, 255, 0)' tickFormatter={toPercent} tick={{fontSize: 0}}  />\n\t\t\t\t\t\t\t<YAxis stroke='rgba(255, 255, 255, 0.2)' tick={{fontSize: 10}}  />\n\t        \t\t\t\t<Tooltip content={<CustomTooltip />} />\n\t\t\t\t\t\t\t<Area type=\"monotone\" isAnimationActive={true} animationDuration={900}  dataKey=\"smrti\" stroke=\"rgba(239, 57, 57, 0.8)\" fill=\"rgba(239, 57, 57, 0.8)\" fillOpacity={1} fill=\"url(#colorSmrti)\" />\n\t\t\t\t\t\t\t<Area type=\"monotone\" isAnimationActive={true} animationDuration={900}  dataKey=\"Primerov\" stroke=\"rgba(255, 255, 255, 1)\" fill=\"rgba(255, 255, 255, 0.7)\" fillOpacity={1} fill=\"url(#colorPrimerov)\" />\n\t\t\t\t\t\t</AreaChart>\n\t\t\t\t\t</ResponsiveContainer>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    HashRouter,\n    Route\n} from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nimport axios from 'axios';\nimport Moment from 'react-moment';\nimport 'moment-timezone';\n\nimport './assets/style/main.scss';\n\nimport Header from './Components/Header.js';\n\nimport List from './List/List.js';\nimport All from './Components/All.js';\nimport Graph from './Graph/Graph.js';\n\n\nexport default function App() {\n\n\taxios.get(\"https://corona.vidakovic.si/api/ip\")\n\t\t.then(res => {\n\t\t\tconsole.log(res.data);\n\t})\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App dark\">\n\t\t\t\t<Header />\n\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<div className=\"two\">\n\t\t\t\t\t\t\t\t<div className=\"graf\">\n\t\t\t\t\t\t\t\t\t<Graph />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"all\">\n\t\t\t\t\t\t\t\t\t<All />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"podatki\">\n\t\t\t\t\t\t\t\t<List />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/admin\">\n\t\t\t\t\t\t<p>lol</p>\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t);\n}\n\nfunction Home() {\n\treturn (\n\t\t<section>\n\t\t\t<div className=\"two\">\n\t\t\t\t<div className=\"graf\">\n\t\t\t\t\t<Graph />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"all\">\n\t\t\t\t\t<All />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"podatki\">\n\t\t\t\t<List />\n\t\t\t</div>\n\t\t</section>\n\t);\n}\nfunction Admin() {\n\treturn (<h2>Admin</h2>);\n}\n"],"sourceRoot":""}