{"ast":null,"code":"\"use strict\";\n\nlet csvToJson = require(\"./src/csvToJson.js\");\n/**\n * Prints a digit as Number type (for example 32 instead of '32')\n */\n\n\nexports.formatValueByType = function () {\n  csvToJson.formatValueByType();\n  return this;\n};\n/**\n * Defines the field delimiter which will be used to split the fields\n */\n\n\nexports.fieldDelimiter = function (delimiter) {\n  csvToJson.fieldDelimiter(delimiter);\n  return this;\n};\n/**\n * Parses .csv file and put its content into a file in json format.\n * @param {inputFileName} path/filename\n * @param {outputFileName} path/filename\n *\n */\n\n\nexports.generateJsonFileFromCsv = function (inputFileName, outputFileName) {\n  if (!inputFileName) {\n    throw new Error(\"inputFileName is not defined!!!\");\n  }\n\n  if (!outputFileName) {\n    throw new Error(\"outputFileName is not defined!!!\");\n  }\n\n  csvToJson.generateJsonFileFromCsv(inputFileName, outputFileName);\n};\n/**\n * Parses .csv file and put its content into an Array of Object in json format.\n * @param {inputFileName} path/filename\n * @return {Array} Array of Object in json format\n *\n */\n\n\nexports.getJsonFromCsv = function (inputFileName) {\n  if (!inputFileName) {\n    throw new Error(\"inputFileName is not defined!!!\");\n  }\n\n  return csvToJson.getJsonFromCsv(inputFileName);\n};\n\nexports.csvStringToJson = function (csvString) {\n  return csvStringToJson(csvString);\n};\n/**\n * Parses .csv file and put its content into a file in json format.\n * @param {inputFileName} path/filename\n * @param {outputFileName} path/filename\n *\n * @deprecated Use generateJsonFileFromCsv()\n */\n\n\nexports.jsonToCsv = function (inputFileName, outputFileName) {\n  csvToJson.generateJsonFileFromCsv(inputFileName, outputFileName);\n};","map":{"version":3,"sources":["/Users/mihavidakovic/Desktop/Work/Personal/corona/client/node_modules/convert-csv-to-json/index.js"],"names":["csvToJson","require","exports","formatValueByType","fieldDelimiter","delimiter","generateJsonFileFromCsv","inputFileName","outputFileName","Error","getJsonFromCsv","csvStringToJson","csvString","jsonToCsv"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAvB;AAEA;;;;;AAGAC,OAAO,CAACC,iBAAR,GAA4B,YAAW;AACrCH,EAAAA,SAAS,CAACG,iBAAV;AACA,SAAO,IAAP;AACD,CAHD;AAKA;;;;;AAGAD,OAAO,CAACE,cAAR,GAAyB,UAASC,SAAT,EAAoB;AAC3CL,EAAAA,SAAS,CAACI,cAAV,CAAyBC,SAAzB;AACA,SAAO,IAAP;AACD,CAHD;AAKA;;;;;;;;AAMAH,OAAO,CAACI,uBAAR,GAAkC,UAASC,aAAT,EAAwBC,cAAxB,EAAwC;AACxE,MAAI,CAACD,aAAL,EAAoB;AAClB,UAAM,IAAIE,KAAJ,CAAU,iCAAV,CAAN;AACD;;AACD,MAAI,CAACD,cAAL,EAAqB;AACnB,UAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACD;;AACDT,EAAAA,SAAS,CAACM,uBAAV,CAAkCC,aAAlC,EAAiDC,cAAjD;AACD,CARD;AAUA;;;;;;;;AAMAN,OAAO,CAACQ,cAAR,GAAyB,UAASH,aAAT,EAAwB;AAC/C,MAAI,CAACA,aAAL,EAAoB;AAClB,UAAM,IAAIE,KAAJ,CAAU,iCAAV,CAAN;AACD;;AACD,SAAOT,SAAS,CAACU,cAAV,CAAyBH,aAAzB,CAAP;AACD,CALD;;AAOAL,OAAO,CAACS,eAAR,GAA0B,UAASC,SAAT,EAAoB;AAC5C,SAAOD,eAAe,CAACC,SAAD,CAAtB;AACD,CAFD;AAIA;;;;;;;;;AAOAV,OAAO,CAACW,SAAR,GAAoB,UAASN,aAAT,EAAwBC,cAAxB,EAAwC;AAC1DR,EAAAA,SAAS,CAACM,uBAAV,CAAkCC,aAAlC,EAAiDC,cAAjD;AACD,CAFD","sourcesContent":["\"use strict\";\n\nlet csvToJson = require(\"./src/csvToJson.js\");\n\n/**\n * Prints a digit as Number type (for example 32 instead of '32')\n */\nexports.formatValueByType = function() {\n  csvToJson.formatValueByType();\n  return this;\n};\n\n/**\n * Defines the field delimiter which will be used to split the fields\n */\nexports.fieldDelimiter = function(delimiter) {\n  csvToJson.fieldDelimiter(delimiter);\n  return this;\n};\n\n/**\n * Parses .csv file and put its content into a file in json format.\n * @param {inputFileName} path/filename\n * @param {outputFileName} path/filename\n *\n */\nexports.generateJsonFileFromCsv = function(inputFileName, outputFileName) {\n  if (!inputFileName) {\n    throw new Error(\"inputFileName is not defined!!!\");\n  }\n  if (!outputFileName) {\n    throw new Error(\"outputFileName is not defined!!!\");\n  }\n  csvToJson.generateJsonFileFromCsv(inputFileName, outputFileName);\n};\n\n/**\n * Parses .csv file and put its content into an Array of Object in json format.\n * @param {inputFileName} path/filename\n * @return {Array} Array of Object in json format\n *\n */\nexports.getJsonFromCsv = function(inputFileName) {\n  if (!inputFileName) {\n    throw new Error(\"inputFileName is not defined!!!\");\n  }\n  return csvToJson.getJsonFromCsv(inputFileName);\n};\n\nexports.csvStringToJson = function(csvString) {\n  return csvStringToJson(csvString);\n};\n\n/**\n * Parses .csv file and put its content into a file in json format.\n * @param {inputFileName} path/filename\n * @param {outputFileName} path/filename\n *\n * @deprecated Use generateJsonFileFromCsv()\n */\nexports.jsonToCsv = function(inputFileName, outputFileName) {\n  csvToJson.generateJsonFileFromCsv(inputFileName, outputFileName);\n};\n"]},"metadata":{},"sourceType":"script"}